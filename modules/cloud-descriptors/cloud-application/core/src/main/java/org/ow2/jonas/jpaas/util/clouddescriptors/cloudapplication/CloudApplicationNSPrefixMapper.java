/**
 * JPaaS Util
 * Copyright (C) 2012 Bull S.A.S.
 * Contact: jasmine@ow2.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
 * USA
 *
 * --------------------------------------------------------------------------
 * $Id$
 * --------------------------------------------------------------------------
 */

package org.ow2.jonas.jpaas.util.clouddescriptors.cloudapplication;

import com.sun.xml.bind.marshaller.NamespacePrefixMapper;

/**
 * Customize namespace prefixes generated by JAXB
 * @author Mohammed Boukada
 */
public class CloudApplicationNSPrefixMapper extends NamespacePrefixMapper {

    /**
     * Cloud application namespace prefix
     */
    private final String CLOUD_APPLICATION_PREFIX = "";

    /**
     * Artefact namespace prefix
     */
    private final String ARTEFACT_PREFIX = "artefact";

    /**
     * Xml namespace prefix
     */
    private final String XML_PREFIX = "xml-embedded";

    @Override
    public String getPreferredPrefix(String namespaceUri, String suggestion, boolean requirePrefix) {
        Object version = CloudApplicationPropertiesManager.getCloudApplicationVersion(namespaceUri);
        if (version != null) {
            // namespaceURI corresponds to cloud-application
            return CLOUD_APPLICATION_PREFIX;
        } else {
            version = CloudApplicationPropertiesManager.getArtefactVersion(namespaceUri);
            if (version != null) {
                // namespaceURI corresponds to artefact
                return ARTEFACT_PREFIX;
            } else {
                version = CloudApplicationPropertiesManager.getXmlVersion(namespaceUri);
                if (version != null) {
                    // namespaceURI corresponds to xml
                    return XML_PREFIX;
                }
            }
        }
        return suggestion;
    }
}
